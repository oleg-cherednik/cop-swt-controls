<?xml version="1.0"?>
<project name="cop.swt.htmlviewer" default="build-binary" basedir=".">
	<description>
		ANT build script for cop.swt.htmlviewer project
	</description>

	<!-- PROPERTIES -->

	<property name="manifest.path" location="./META-INF/MANIFEST.MF" />
	<property file="${manifest.path}" />

	<tstamp prefix="start">
		<format property="curr.time" pattern="yyyyMMdd-HHmm" />
	</tstamp>

	<property name="eclipse.home" location="${eclipse_home}" />
	<property name="eclipse.plugins" location="${eclipse.home}/plugins" />

	<property name="src.dir" location="src" />
	<property name="bin.dir" location="bin" />
	<property name="test.dir" location="test" />
	<property name="dest.dir" location="build" />

	<property name="dest.head" value="${Bundle-Name}" />
	<property name="dest.src.head" value="${dest.head}.source" />
	<property name="dest.teil" value="${Bundle-Version}.v${start.curr.time}" />

	<property name="dest.name" value="${dest.head}_${dest.teil}" />
	<property name="dest.src.name" value="${dest.src.head}_${dest.teil}" />

	<!-- CLASSPATH.CORE -->

	<path id="classpath.core">
		<fileset dir="${eclipse.plugins}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- CLASSPATH.TEST -->

	<path id="classpath.test">
		<pathelement location="${bin.dir}" />
		<fileset dir="${ant.home}/lib">
			<include name="hamcrest-all-1.3.0RC1.jar" />
		</fileset>
	</path>

	<!-- TARGETS -->

	<!-- create binary directory -->
	<target name="create-binary-dir" unless="${bin.dir.exsists}">
		<mkdir dir="${bin.dir}" />
	</target>

	<!-- remove destination directory -->
	<target name="create-destination-dir" unless="${dest.dir.exsists}">
		<mkdir dir="${dest.dir}" />
	</target>

	<!-- REMOVE -->

	<target name="remove" depends="remove-binary-dir, remove-destination-dir" description="Remove binary and destination folders" />

	<!-- remove binary folder -->
	<target name="remove-binary-dir" unless="${bin.dir.exsists}">
		<delete dir="${bin.dir}" />
	</target>

	<!-- remove destination folder -->
	<target name="remove-destination-dir" unless="${dest.dir.exsists}">
		<delete dir="${dest.dir}" />
	</target>

	<!-- CLEAN -->

	<target name="clean" depends="clean-binary-dir, clean-destination-dir" description="Clean binary and destination folders" />

	<!-- clean binary folder -->
	<target name="clean-binary-dir" if="${bin.dir.exsists}">
		<delete includeemptydirs="true">
			<fileset dir="${bin.dir}" includes="**/*" />
		</delete>
	</target>

	<!-- clean destination folder -->
	<target name="clean-destination-dir" if="${dest.dir.exsists}">
		<delete includeemptydirs="true">
			<fileset dir="${dest.dir}" includes="**/*" />
		</delete>
	</target>

	<!-- BUILD -->

	<target name="compile" depends="create-binary-dir, clean-binary-dir" description="Compile source">
		<javac srcdir="${src.dir}" destdir="${bin.dir}" includeantruntime="false">
			<classpath refid="classpath.core" />
		</javac>
	</target>

	<target name="build-binary" depends="compile, create-destination-dir" description="Create binary *.jar archive">
		<jar jarfile="${dest.dir}/${dest.name}.jar" manifest="${manifest.path}">
			<fileset dir="${bin.dir}">
				<exclude name="**/${dest.head}_*.jar" />
				<exclude name="**/.svn" />
			</fileset>
		</jar>
	</target>

	<target name="build-source" depends="create-destination-dir" description="Create source *.jar archive">
		<jar jarfile="${dest.dir}/${dest.src.name}.jar" manifest="${manifest.path}">
			<fileset dir="${src.dir}">
				<exclude name="**/*.jar" />
				<exclude name="**/.svn" />
			</fileset>
		</jar>
	</target>

	<target name="build-release" depends="clean, build-binary, build-source" description="Build release version" />
</project>